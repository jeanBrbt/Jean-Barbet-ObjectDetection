# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        
      - name: Install libgdiplus
        run: sudo apt-get install -y libgdiplus
      
      # Lire la version du SDK dans global.json
      - name: Read SDK version from global.json
        id: read-sdk-version
        run: |
          sdk_version=$(cat global.json | jq -r '.sdk.version')
          echo "SDK version found: $sdk_version"
          echo "##[set-output name=sdk_version;$sdk_version]"


      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ steps.read-sdk-version.outputs.sdk_version }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run Unit Tests
        run: dotnet test --no-build --configuration Release

      - name: Publish
        run: dotnet publish ./src/Jean.Barbet.objectDectection.Console/Jean.Barbet.objectDectection.Console.csproj --self-contained true --output ./win-x64/objectDectection -c Release -r win-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:PublishReadyToRun=true

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Published App
          path: ./win-x64/fibonacci
